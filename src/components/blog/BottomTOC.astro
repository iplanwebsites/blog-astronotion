---
import type { MarkdownHeading } from "astro";

import { generateToc } from "src/utils/generateToc";

interface Props {
	headings: Array<MarkdownHeading>;
}

const { headings } = Astro.props;

const toc = generateToc(headings);
---

<aside class="fixed bottom-0 m-2 left-0 ring-accent-2/80 ring-2 z-40 w-[96%] max-w-[96%] whitespace-normal overflow-hidden sm:hidden bg-bgColor p-2 vopacity-0 rounded-xl visible-transition shadow-lg shadow-accent-2/40 print:hidden" id="bottom-toc-nav">
  {
      !!toc.length && (
          <>
              <p class="text-xs inline">
                  {toc.map((heading, index) => (
                      heading.depth == 1 && (
                          <a
                              class={`no-underline hover:text-accent-2 ${heading.slug === "autogenerated-interlinked-content" ? "hidden" : ""}`}
                              href={`#${heading.slug}`}
                              id={`-bottomtocid--${heading.slug}`}
                              aria-label={`Scroll to section: ${heading.text}`}
                          >
                              {heading.text}{index < toc.length - 1 ? " â€¢ " : ""}
                          </a>
                      )
                  ))}
              </p>
          </>
      )
  }
</aside>
{/*uses style because apparently visibility+opacity cannot be transitioned in tailwind? */}
<style>
.visible-transition {
    transition: opacity 150ms linear, visibility 0ms linear 150ms;
}

.vopacity-0 {
    opacity: 0;
    visibility: hidden;
}

.vopacity-100 {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s; /* No delay when showing */
}
</style>
