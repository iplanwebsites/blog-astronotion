---
import FormattedDate from "../FormattedDate.astro";
import type { Post } from "src/lib/interfaces";
import { getNotionColorToTailwindColor, getNotionColorToTailwindColorForBorder } from "@/lib/style-helpers";
import { areDifferentDates } from "@/utils/date";
import { getNavLink } from "@/lib/blog-helpers";

interface Props {
	post: Post;
}

const { post } = Astro.props;
//FIXME: figure out what this remarkPluginFrontmatter is
// const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

<h1 class="title mb-3 sm:mb-1">{post.Title}</h1>
<div class="flex flex-wrap items-center gap-x-3 gap-y-2 max-w-full">
	<p class="font-semibold">
		<FormattedDate date={new Date(post.Date)} dateTimeOptions={dateTimeOptions} />
	</p>
	{
		post.Date && post.LastUpdatedDate && areDifferentDates(post.Date, post.LastUpdatedDate) && (
			<span class="rounded-lg bg-quote/10 p-1 text-quote">
				{"Last Updated:"}
				<FormattedDate
					class="ms-1"
					date={new Date(post.LastUpdatedDate)}
					dateTimeOptions={dateTimeOptions}
				/>
			</span>
		)
	}
</div>
{
	post.Tags.length > 0 && (
		<div class="mt-2">
			<svg
				aria-hidden="true"
				focusable="false"
				xmlns="http://www.w3.org/2000/svg"
				class="me-1 inline-block h-6 w-6"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				fill="none"
				stroke-linecap="round"
				stroke-linejoin="round"
			>
				<path stroke="none" d="M0 0h24v24H0z" fill="none" />
				<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
				<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
				<path d="M6 9h-.01" />
			</svg>
			{post.Tags.map((tag, i) => (
				<>
					<a
						class={`inline-block rounded-lg border p-1 mt-1 ${getNotionColorToTailwindColor(
							tag.color + "-background",
						)} ${getNotionColorToTailwindColorForBorder(tag.color + "-background")}`}
						aria-label={`View more blogs with the tag ${tag.name}`}
						href={getNavLink("/tags/" + tag.name + "/")}
						data-pagefind-filter="tag"
					>
						{tag.name}
					</a>{" "}
				</>
			))}
		</div>
	)
}
<hr class="divider w-70 mx-auto my-4 h-1 rounded border-0 bg-accent/30" />
