---
// import type { CollectionEntry } from "astro:content";
// import type { HTMLTag, Polymorphic } from "astro/types";
import type { HTMLTag } from "astro/types";
import FormattedDate from "../FormattedDate.astro";
import type { Post } from "src/lib/interfaces";
import { getNotionColorToTailwindColor, getNotionColorToTailwindColorForBorder } from "@/lib/style-helpers";
import { getNavLink, getPostLink } from "@/lib/blog-helpers";
import { MENU_PAGES_COLLECTION } from "@/constants";

// type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
// 	post: CollectionEntry<"post">;
// 	withDesc?: boolean;
// };
//FIXME: why is this a new method?

interface Props {
	post: Post;
	as?: HTMLTag;
	withDesc?: boolean;
}

const { post, as: Tag = "div", withDesc = false } = Astro.props;
const postLink = getPostLink(post.Slug, post.Collection === MENU_PAGES_COLLECTION);

//TODO: what is this?
// const postDate = post.data.updatedDate ?? post.data.publishDate;
---

<FormattedDate date={new Date(post.Date)} class="min-w-[120px] text-xs text-accent/90" />
<Tag>
	<a href={postLink} class="webtrotion-page-link" data-astro-prefetch>
		{post.Title}
	</a>
</Tag>
{withDesc && post.Excerpt && <q class="line-clamp-3 block italic">{post.Excerpt}</q>}
{
	post.Tags.length > 0 && (
		<div class="mt-1">
			<svg
				aria-hidden="true"
				focusable="false"
				xmlns="http://www.w3.org/2000/svg"
				class="me-1 inline-block h-6 w-6"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				fill="none"
				stroke-linecap="round"
				stroke-linejoin="round"
			>
				<path stroke="none" d="M0 0h24v24H0z" fill="none" />
				<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
				<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
				<path d="M6 9h-.01" />
			</svg>
			{post.Tags.map((tag, i) => (
				<>
					<a
						class={`inline-block rounded-sm border text-sm ${getNotionColorToTailwindColor(
							tag.color + "-background",
						)} ${getNotionColorToTailwindColorForBorder(tag.color + "-background")}`}
						aria-label={`View more blogs with the tag ${tag.name}`}
						href={getNavLink("/tags/" + tag.name + "/")}
					>
						{tag.name}
					</a>{" "}
				</>
			))}
		</div>
	)
}
