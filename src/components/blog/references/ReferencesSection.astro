---
import { REFERENCES } from "@/constants";
import InternalLinksInThisPage from "./SiteLinksInThisPage.astro";
import LinksToThisPage from "./LinksToThisPage.astro";
import ExternalLinksInThisPage from "./ExternalLinksInThisPage.astro";
import MediaLinksInThisPage from "./MediaLinksInThisPage.astro";
import type { Post } from "@/lib/interfaces";
import { getReferencesInPage, getReferencesToPage } from "@/lib/blog-helpers";

interface Props {
	post: Post;
}
const { post } = Astro.props;

const allReferencesToPage = getReferencesToPage(post.PageId);

const allReferencesInPage = getReferencesInPage(post.PageId);
const filteredExternalNonMediaReferences = allReferencesInPage? allReferencesInPage.filter(ref => ref.external_hrefs.length > 0 || ref.direct_nonmedia_link):null;
const filteredSitePages = allReferencesInPage? allReferencesInPage.filter(ref => ref.other_pages.length>0 || ref.link_to_pageid):null;
const filteredMediaReferences = allReferencesInPage? allReferencesInPage.filter(ref => ref.direct_media_link):null;
const rendering = REFERENCES && ((REFERENCES["links-to-this-page"] && allReferencesToPage && Object.keys(allReferencesToPage).length>0) || (REFERENCES["site-links-in-page"] && filteredSitePages && Object.keys(filteredSitePages).length>0) || (REFERENCES["external-links-in-page"] && filteredExternalNonMediaReferences && Object.keys(filteredExternalNonMediaReferences).length>0) || (REFERENCES["media-and-file-links-in-this-page"] && filteredMediaReferences && Object.keys(filteredMediaReferences).length>0))


---
<aside data-pagefind-ignore="all" class="print:hidden">
  {
    rendering && 		(
			<h2 class="cursor-pointer non-toggle-h2 mb-4 mt-8 text-2xl font-normal" id={"autogenerated-interlinked-content"} onclick="
        var fullUrl = `${window.location.origin}${window.location.pathname}#${id}`;
        navigator.clipboard.writeText(fullUrl);
        window.history.pushState(null, '', fullUrl);
        document.getElementById(`${id}`).scrollIntoView({ behavior: 'smooth' });
    ">
				Interlinked Content
			</h2>
    <style>
	h2::before {
		content: "#";
		position: absolute;
		color: rgb(var(--theme-accent));
		margin-left: -1.5rem;
		display: inline-block;
		opacity: 0; /* Start with invisible content */
		transition: opacity 0.3s ease; /* Transition the opacity */
	}

	h2:hover::before {
		opacity: 1; /* Make the content visible on hover */
	}
  #-tocid--autogenerated-interlinked-content
  {
    display: block!important;
  }
  #-bottomtocid--autogenerated-interlinked-content
  {
    display: inline!important;
  }
</style>)
  }
{REFERENCES && REFERENCES["links-to-this-page"] && allReferencesToPage && <LinksToThisPage post={post} allReferencesToPage={allReferencesToPage}/>}
{REFERENCES && REFERENCES["site-links-in-page"] && filteredSitePages && <InternalLinksInThisPage post={post} filteredReferencesInPage={filteredSitePages}/>}
{REFERENCES && REFERENCES["media-and-file-links-in-this-page"] && filteredMediaReferences && <MediaLinksInThisPage post={post} filteredReferencesInPage={filteredMediaReferences}/>}
{REFERENCES && REFERENCES["external-links-in-page"] && filteredExternalNonMediaReferences && <ExternalLinksInThisPage post={post} filteredReferencesInPage={filteredExternalNonMediaReferences}/>}
{
  rendering && <hr class="divider w-70 mx-auto my-4 h-0.5 rounded border-0 bg-accent/30" />
}
</aside>



