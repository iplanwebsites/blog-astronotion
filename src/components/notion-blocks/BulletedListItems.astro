---
import * as interfaces from "../../lib/interfaces.ts";
import { getNotionColorToTailwindColor } from "../../lib/style-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
  block: interfaces.Block;
  headings: interfaces.Block[];
  renderChildren?: boolean; // Make this optional
  setId?:boolean;
}

const { block, headings, renderChildren = true, setId=true } = Astro.props;
---

<ul class="list-outside list-disc space-y-1 pl-6" id={setId?block.Id:undefined}>
	{
		block.ListItems.filter((b: interfaces.Block) => b.Type === "bulleted_list_item").map(
			(b: interfaces.Block) => (
				<li class={getNotionColorToTailwindColor(b.BulletedListItem.Color)} id={setId?b.Id:undefined}>
					{b.BulletedListItem.RichTexts.map((richText: interfaces.RichText) => (
						<RichText richText={richText} blockID={b.Id} />
					))}
					{b.HasChildren && renderChildren && (
						<NotionBlocks blocks={b.BulletedListItem.Children} headings={headings} renderChildren={renderChildren} setId={setId}/>
					)}
				</li>
			),
		)
	}
</ul>
