---
import { Post } from "../../lib/interfaces.ts";
import { getPostByPageId } from "../../lib/notion/client";
import { getPostLink } from "../../lib/blog-helpers.ts";
import { MENU_PAGES_COLLECTION, REFERENCES } from "@/constants";
import { getTextToAstroIcon, getIconTailwindFilterStyle, isNotionIconURL } from "@/lib/style-helpers";
import { Icon } from "astro-iconify";
// import { rootHasDarkClass } from "@/utils";

export interface Props {
	pageId: string;
}

const { pageId } = Astro.props;

let post: Post = null;
if (pageId) {
	post = await getPostByPageId(pageId);
}
// let iconURL = post.Icon && post.Icon.Type === "external" && isNotionIconURL(post.Icon.Url)?post.Icon.Url:null;
//does not work because that needs to be in client side script
// if (rootHasDarkClass() && iconURL){iconURL = post.Icon.Url+"?mode=dark";}

const hreflink=post?getPostLink(post.Slug, post.Collection === MENU_PAGES_COLLECTION):null;
---

{    post && (
        <a href={hreflink} class="inline items-center justify-center p-0.5 font-medium webtrotion-page-link">
            <>
				<span class="mx-1 inline">
					{post.Icon && post.Icon.Type === "emoji" ? (
						post.Icon.Emoji
					) : post.Icon && post.Icon.Type === "external" ? (
						<img src={post.Icon.Url} class={`h-4 w-4 flex-shrink-0 align-sub inline ${getIconTailwindFilterStyle(post.Icon.Url)}`} alt=""/>
					) : getTextToAstroIcon("document") ? (
						<Icon name={getTextToAstroIcon("document")} class="inline h-4 w-4" aria-hidden="true"/>
					) : (
						"ðŸ“„"
					)}
				</span>
				<span class="w-full inline">{post.Title}</span>
			</>

        </a>
    )
}

