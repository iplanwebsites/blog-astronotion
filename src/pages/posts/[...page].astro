---
import type { Page, GetStaticPaths } from "astro";
// import type { CollectionEntry } from "astro:content";
import PageLayout from "@/layouts/Base";
import PostPreview from "@/components/blog/PostPreview";
import Pagination from "@/components/Paginator";
import { getAllPosts, getAllTags } from "@/lib/notion/client";
import type { Post, SelectProperty } from "src/lib/interfaces";
import { getNotionColorToTailwindColor, getNotionColorToTailwindColorForBorder } from "@/lib/style-helpers";
import { HIDE_UNDERSCORE_SLUGS_IN_LISTS } from "@/constants";
import { getNavLink } from "@/lib/blog-helpers";

export const getStaticPaths = (async ({ paginate }) => {
	const posts = await getAllPosts();

	// Apply the underscore slug filter if HIDE_UNDERSCORE_SLUGS_IN_LISTS is true
	const filteredPosts = HIDE_UNDERSCORE_SLUGS_IN_LISTS
		? posts.filter((post) => !post.Slug.startsWith("_"))
		: posts;
	const uniqueTags = await getAllTags();

	return paginate(filteredPosts, { props: { uniqueTags }, pageSize: 10 });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<Post>;
	uniqueTags: SelectProperty[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	title: "Posts",
	description: "Read my collection of posts and the things that interest me",
	ogImage: "/og-image/postsindex---index.png",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: getNavLink(page.url.prev),
			text: `← Previous Posts`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: getNavLink(page.url.next),
			text: `Next Posts →`,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Posts</h1>
	<div class="grid gap-y-16 grid-cols-3 sm:grid-cols-4 sm:items-start sm:gap-x-8">
		<section aria-label="Blog post list" class="print:col-span-full screen:col-span-3">
			<ul class="space-y-4 text-start">
				{
					page.data.map((post) => (
						<li class="flex flex-col max-w-full flex-wrap gap-1.5 [&_q]:basis-full">
							<PostPreview post={post} as="h2" withDesc />
						</li>
					))
				}
			</ul>
			<Pagination {...paginationProps} />
		</section>
		{
			!!uniqueTags.length && (
				<aside class="col-span-3 sm:col-span-1 print:hidden">
					<h2 class="mb-4 flex items-center text-lg font-semibold text-accent-2">
						<svg
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							class="h-6 w-6"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							fill="none"
							stroke-linecap="round"
							stroke-linejoin="round"
						>
							<path stroke="none" d="M0 0h24v24H0z" fill="none" />
							<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
							<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
							<path d="M6 9h-.01" />
						</svg>
						Tags
					</h2>
					<ul class="flex flex-wrap gap-2">
						{uniqueTags.map((tag) => (
							<li>
								<a
									class={`flex items-center justify-center rounded-lg border p-1 ${getNotionColorToTailwindColor(
										tag.color + "-background",
									)} ${getNotionColorToTailwindColorForBorder(tag.color + "-background")}`}
									href={getNavLink("/tags/" + tag.name + "/")}
									aria-label={`View all posts with the tag: ${tag.name}`}
								>
									{tag.name}
								</a>
							</li>
						))}
					</ul>
					<span class="mt-4 block sm:text-end">
						<a
							class="sm:hover:text-accent"
							href={getNavLink("/tags/")}
							aria-label="View all tags"
						>
							View all →
						</a>
					</span>
				</aside>
			)
		}
	</div>
</PageLayout>
