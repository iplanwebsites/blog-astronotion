---
import NotionBlocks from "@/components/NotionBlocks.astro";
import PostLayout from "@/layouts/BlogPost.astro";
import { extractTargetBlocks, resetFirstImage } from "@/lib/blog-helpers";
import {
	getAllPosts,
	getPostContentByPostId,
	processFileBlocks,
} from "@/lib/notion/client";
import type { Post } from "@/lib/interfaces";
import { buildHeadings } from "@/utils";

export async function getStaticPaths() {
	const posts = await getAllPosts();

	return posts.map((post) => ({
		params: { slug: post.Slug },
		props: { post },
	}));
}
interface Props {
	post: Post;
}
const { post } = Astro.props;
let postFound = true;
let headings = null;
let blocks = null;
let referencesInPage = null;

if (!post) {
	console.log("Post not found. slug: ${slug}");
	postFound = false;
}

if (postFound) {
  const result = await getPostContentByPostId(post);
  blocks = result.blocks;
  referencesInPage = result.referencesInPage;

	headings = buildHeadings(blocks);

	const fileAtacchedBlocks = extractTargetBlocks(["image","video","file","audio"], blocks)
		.filter((block) => {
			if (!block) {
				return false;
			}
			const imageOrVideoOrAudioOrFile = block.NImage || block.File || block.Video || block.NAudio;
			return (
				imageOrVideoOrAudioOrFile &&
				imageOrVideoOrAudioOrFile.File &&
				imageOrVideoOrAudioOrFile.File.Url
			);
		});

	const processedFile = await processFileBlocks(fileAtacchedBlocks);
}
---
  {postFound && resetFirstImage() &&
  (<PostLayout post={post} headings={headings}>
	<div class="post-body screen:max-w-prose print:w-full">
		 <NotionBlocks blocks={blocks} isRoot={true} />
	</div>
</PostLayout>
)}
