---
import type { Page, GetStaticPaths } from "astro";
// import type { CollectionEntry } from "astro:content";
import PageLayout from "@/layouts/Base";
import PostPreview from "@/components/blog/PostPreview";
import Pagination from "@/components/Paginator";
import { getAllPosts } from "@/lib/notion/client";
import type { Post } from "@/lib/notion/interfaces";

import { HIDE_UNDERSCORE_SLUGS_IN_LISTS } from "@/constants";
import { getNavLink } from "@/lib/blog-helpers";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const allPosts = await getAllPosts();

	// Apply the underscore slug filter if HIDE_UNDERSCORE_SLUGS_IN_LISTS is true
	const filteredPosts = HIDE_UNDERSCORE_SLUGS_IN_LISTS
		? allPosts.filter((post) => !post.Slug.startsWith("_"))
		: allPosts;
  //NOTE: allPosts is already sorted
	// const allPostsByDate = filteredPosts.sort(
	// 	(a, b) => new Date(b.Date).getTime() - new Date(a.Date).getTime(),
	// );

	const uniqueTags = [...new Set(filteredPosts.flatMap((post) => post.Tags))];


	return uniqueTags.flatMap((tag) => {
    const filterPosts = filteredPosts.filter((post) =>
    post.Tags.some((postTag) => postTag.name === tag.name)
  );
    //console.log(tag, filterPosts);
		return paginate(filterPosts, {
			params: { tag: tag.name },
			pageSize: 10,
		});
	});
};

interface Props {
	page: Page<Post>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
	title: `Tag: ${tag}`,
	description: `View all posts with the tag - ${tag}`,
	ogImage: "/og-image/tagpage---" + tag + ".png",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: getNavLink(page.url.prev),
			text: `← Previous Tags`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: getNavLink(page.url.next),
			text: `Next Tags →`,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6 flex max-w-full items-center">
		<a
			href={getNavLink("/tags/")}
			class="hove text-accent underline-offset-4 underline-offset-4 sm:hover:underline" aria-label="View all tags">Tags</a
		>
		<span class="me-3 ms-2">→</span>
		<span class="text-xl">#{tag}</span>
	</h1>
	<section aria-label="Blog post list">
		<ul class="space-y-4">
			{
				page.data.map((p) => (
					<li class="flex max-w-full flex-col flex-wrap gap-1.5 [&_q]:basis-full">
						<PostPreview post={p} as="h2" withDesc />
					</li>
				))
			}
		</ul>
		<Pagination {...paginationProps} />
	</section>
</PageLayout>
